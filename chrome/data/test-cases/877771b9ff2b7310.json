{"uid":"877771b9ff2b7310","name":"test_add_address[login_data0-address_data1-chrome]","fullName":"tests.test_add_address#test_add_address","historyId":"263a74329bb7655596d4cf6f7bad65b0","time":{"start":1761123003495,"stop":1761123015395,"duration":11900},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x5581470a5fba <unknown>\n#1 0x558146b2a6d0 <unknown>\n#2 0x558146b7c2aa <unknown>\n#3 0x558146b7c541 <unknown>\n#4 0x558146bca6c4 <unknown>\n#5 0x558146ba1e5d <unknown>\n#6 0x558146bc7b54 <unknown>\n#7 0x558146ba1c03 <unknown>\n#8 0x558146b6e7a8 <unknown>\n#9 0x558146b6f421 <unknown>\n#10 0x55814706ab28 <unknown>\n#11 0x55814706e87f <unknown>\n#12 0x558147052c49 <unknown>\n#13 0x55814706f405 <unknown>\n#14 0x5581470384ff <unknown>\n#15 0x558147093258 <unknown>\n#16 0x558147093432 <unknown>\n#17 0x5581470a4fa3 <unknown>\n#18 0x7f867469caa4 <unknown>\n#19 0x7f8674729c6c <unknown>","statusTrace":"driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"a8f1fc60a6dbda79dd403143b5a4487d\")>\naddress_data = {'address_line_1': '45 Andheri West', 'address_line_2': 'Opp Infinity Mall', 'city': 'Mumbai', 'company_field': 'TCS Limited', ...}\nlogin_data = {'email': 'aarav.shasddasarma123@example.com', 'password': 'Pass@1234', 'result': 'success'}\n\n    @pytest.mark.parametrize(\"driver\", browsers, indirect=True)\n    @pytest.mark.parametrize(\"address_data\", get_data(\"data/Complete_Test_Data/add_address.csv\"))\n    @pytest.mark.parametrize(\"login_data\", get_data(\"data/Complete_Test_Data/login_data.csv\"))\n    @allure.feature(\"Add Address\")\n    def test_add_address(driver, address_data, login_data):\n        print(f\"\\nStarting test with login: {login_data['email']}\")\n        print(f\"Address data: {address_data}\")\n        driver.get(\"https://market99.com/\")\n        login_page = LoginPage(driver)\n>       login_page.open_login()\n\ntests/test_add_address.py:19: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npage_objects/login_page.py:32: in open_login\n    self.click(self.LOGIN_WITH_EMAIL_BUTTON)\npage_objects/base_page.py:55: in click\n    element = self.wait.until(EC.element_to_be_clickable(by_locator))\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"a8f1fc60a6dbda79dd403143b5a4487d\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7f1571fdede0>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x5581470a5fba <unknown>\nE       #1 0x558146b2a6d0 <unknown>\nE       #2 0x558146b7c2aa <unknown>\nE       #3 0x558146b7c541 <unknown>\nE       #4 0x558146bca6c4 <unknown>\nE       #5 0x558146ba1e5d <unknown>\nE       #6 0x558146bc7b54 <unknown>\nE       #7 0x558146ba1c03 <unknown>\nE       #8 0x558146b6e7a8 <unknown>\nE       #9 0x558146b6f421 <unknown>\nE       #10 0x55814706ab28 <unknown>\nE       #11 0x55814706e87f <unknown>\nE       #12 0x558147052c49 <unknown>\nE       #13 0x55814706f405 <unknown>\nE       #14 0x5581470384ff <unknown>\nE       #15 0x558147093258 <unknown>\nE       #16 0x558147093432 <unknown>\nE       #17 0x5581470a4fa3 <unknown>\nE       #18 0x7f867469caa4 <unknown>\nE       #19 0x7f8674729c6c <unknown>\n\n/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:138: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"driver","time":{"start":1761123003254,"stop":1761123003494,"duration":240},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x5581470a5fba <unknown>\n#1 0x558146b2a6d0 <unknown>\n#2 0x558146b7c2aa <unknown>\n#3 0x558146b7c541 <unknown>\n#4 0x558146bca6c4 <unknown>\n#5 0x558146ba1e5d <unknown>\n#6 0x558146bc7b54 <unknown>\n#7 0x558146ba1c03 <unknown>\n#8 0x558146b6e7a8 <unknown>\n#9 0x558146b6f421 <unknown>\n#10 0x55814706ab28 <unknown>\n#11 0x55814706e87f <unknown>\n#12 0x558147052c49 <unknown>\n#13 0x55814706f405 <unknown>\n#14 0x5581470384ff <unknown>\n#15 0x558147093258 <unknown>\n#16 0x558147093432 <unknown>\n#17 0x5581470a4fa3 <unknown>\n#18 0x7f867469caa4 <unknown>\n#19 0x7f8674729c6c <unknown>","statusTrace":"driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"a8f1fc60a6dbda79dd403143b5a4487d\")>\naddress_data = {'address_line_1': '45 Andheri West', 'address_line_2': 'Opp Infinity Mall', 'city': 'Mumbai', 'company_field': 'TCS Limited', ...}\nlogin_data = {'email': 'aarav.shasddasarma123@example.com', 'password': 'Pass@1234', 'result': 'success'}\n\n    @pytest.mark.parametrize(\"driver\", browsers, indirect=True)\n    @pytest.mark.parametrize(\"address_data\", get_data(\"data/Complete_Test_Data/add_address.csv\"))\n    @pytest.mark.parametrize(\"login_data\", get_data(\"data/Complete_Test_Data/login_data.csv\"))\n    @allure.feature(\"Add Address\")\n    def test_add_address(driver, address_data, login_data):\n        print(f\"\\nStarting test with login: {login_data['email']}\")\n        print(f\"Address data: {address_data}\")\n        driver.get(\"https://market99.com/\")\n        login_page = LoginPage(driver)\n>       login_page.open_login()\n\ntests/test_add_address.py:19: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npage_objects/login_page.py:32: in open_login\n    self.click(self.LOGIN_WITH_EMAIL_BUTTON)\npage_objects/base_page.py:55: in click\n    element = self.wait.until(EC.element_to_be_clickable(by_locator))\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"a8f1fc60a6dbda79dd403143b5a4487d\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7f1571fdede0>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x5581470a5fba <unknown>\nE       #1 0x558146b2a6d0 <unknown>\nE       #2 0x558146b7c2aa <unknown>\nE       #3 0x558146b7c541 <unknown>\nE       #4 0x558146bca6c4 <unknown>\nE       #5 0x558146ba1e5d <unknown>\nE       #6 0x558146bc7b54 <unknown>\nE       #7 0x558146ba1c03 <unknown>\nE       #8 0x558146b6e7a8 <unknown>\nE       #9 0x558146b6f421 <unknown>\nE       #10 0x55814706ab28 <unknown>\nE       #11 0x55814706e87f <unknown>\nE       #12 0x558147052c49 <unknown>\nE       #13 0x55814706f405 <unknown>\nE       #14 0x5581470384ff <unknown>\nE       #15 0x558147093258 <unknown>\nE       #16 0x558147093432 <unknown>\nE       #17 0x5581470a4fa3 <unknown>\nE       #18 0x7f867469caa4 <unknown>\nE       #19 0x7f8674729c6c <unknown>\n\n/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:138: TimeoutException","steps":[],"attachments":[{"uid":"4c5663c28a64b745","name":"screenshot","source":"4c5663c28a64b745.png","type":"image/png","size":56874}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1761123015501,"stop":1761123015573,"duration":72},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"feature","value":"Add Address"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_add_address"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2170-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_add_address"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"address_data","value":"{'first_name': 'Aditi', 'last_name': 'Sharma', 'company_field': 'TCS Limited', 'province': 'Maharashtra', 'address_line_1': '45 Andheri West', 'address_line_2': 'Opp Infinity Mall', 'city': 'Mumbai', 'postal_code': '400053', 'phone_number': '9123456789'}"},{"name":"driver","value":"'chrome'"},{"name":"login_data","value":"{'email': 'aarav.shasddasarma123@example.com', 'password': 'Pass@1234', 'result': 'success'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"877771b9ff2b7310.json","parameterValues":["{'first_name': 'Aditi', 'last_name': 'Sharma', 'company_field': 'TCS Limited', 'province': 'Maharashtra', 'address_line_1': '45 Andheri West', 'address_line_2': 'Opp Infinity Mall', 'city': 'Mumbai', 'postal_code': '400053', 'phone_number': '9123456789'}","'chrome'","{'email': 'aarav.shasddasarma123@example.com', 'password': 'Pass@1234', 'result': 'success'}"]}