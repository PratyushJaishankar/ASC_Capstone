{"uid":"a5ee2e98e23d185b","name":"test_add_address[login_data0-address_data3-chrome]","fullName":"tests.test_add_address#test_add_address","historyId":"0fd9f1883353d4b63956e629dd6ebca9","time":{"start":1761123053715,"stop":1761123065557,"duration":11842},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55cf13989fba <unknown>\n#1 0x55cf1340e6d0 <unknown>\n#2 0x55cf134602aa <unknown>\n#3 0x55cf13460541 <unknown>\n#4 0x55cf134ae6c4 <unknown>\n#5 0x55cf13485e5d <unknown>\n#6 0x55cf134abb54 <unknown>\n#7 0x55cf13485c03 <unknown>\n#8 0x55cf134527a8 <unknown>\n#9 0x55cf13453421 <unknown>\n#10 0x55cf1394eb28 <unknown>\n#11 0x55cf1395287f <unknown>\n#12 0x55cf13936c49 <unknown>\n#13 0x55cf13953405 <unknown>\n#14 0x55cf1391c4ff <unknown>\n#15 0x55cf13977258 <unknown>\n#16 0x55cf13977432 <unknown>\n#17 0x55cf13988fa3 <unknown>\n#18 0x7fecb229caa4 <unknown>\n#19 0x7fecb2329c6c <unknown>","statusTrace":"driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"2b5e5f1a603ffd77b5f0d617f9264e3d\")>\naddress_data = {'address_line_1': '12 MG Layout', 'address_line_2': 'Kadavanthra', 'city': 'Cochin', 'company_field': 'Wipro Technologies', ...}\nlogin_data = {'email': 'aarav.shasddasarma123@example.com', 'password': 'Pass@1234', 'result': 'success'}\n\n    @pytest.mark.parametrize(\"driver\", browsers, indirect=True)\n    @pytest.mark.parametrize(\"address_data\", get_data(\"data/Complete_Test_Data/add_address.csv\"))\n    @pytest.mark.parametrize(\"login_data\", get_data(\"data/Complete_Test_Data/login_data.csv\"))\n    @allure.feature(\"Add Address\")\n    def test_add_address(driver, address_data, login_data):\n        print(f\"\\nStarting test with login: {login_data['email']}\")\n        print(f\"Address data: {address_data}\")\n        driver.get(\"https://market99.com/\")\n        login_page = LoginPage(driver)\n>       login_page.open_login()\n\ntests/test_add_address.py:19: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npage_objects/login_page.py:32: in open_login\n    self.click(self.LOGIN_WITH_EMAIL_BUTTON)\npage_objects/base_page.py:55: in click\n    element = self.wait.until(EC.element_to_be_clickable(by_locator))\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"2b5e5f1a603ffd77b5f0d617f9264e3d\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7f1571ff8900>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x55cf13989fba <unknown>\nE       #1 0x55cf1340e6d0 <unknown>\nE       #2 0x55cf134602aa <unknown>\nE       #3 0x55cf13460541 <unknown>\nE       #4 0x55cf134ae6c4 <unknown>\nE       #5 0x55cf13485e5d <unknown>\nE       #6 0x55cf134abb54 <unknown>\nE       #7 0x55cf13485c03 <unknown>\nE       #8 0x55cf134527a8 <unknown>\nE       #9 0x55cf13453421 <unknown>\nE       #10 0x55cf1394eb28 <unknown>\nE       #11 0x55cf1395287f <unknown>\nE       #12 0x55cf13936c49 <unknown>\nE       #13 0x55cf13953405 <unknown>\nE       #14 0x55cf1391c4ff <unknown>\nE       #15 0x55cf13977258 <unknown>\nE       #16 0x55cf13977432 <unknown>\nE       #17 0x55cf13988fa3 <unknown>\nE       #18 0x7fecb229caa4 <unknown>\nE       #19 0x7fecb2329c6c <unknown>\n\n/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:138: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"driver","time":{"start":1761123053467,"stop":1761123053714,"duration":247},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55cf13989fba <unknown>\n#1 0x55cf1340e6d0 <unknown>\n#2 0x55cf134602aa <unknown>\n#3 0x55cf13460541 <unknown>\n#4 0x55cf134ae6c4 <unknown>\n#5 0x55cf13485e5d <unknown>\n#6 0x55cf134abb54 <unknown>\n#7 0x55cf13485c03 <unknown>\n#8 0x55cf134527a8 <unknown>\n#9 0x55cf13453421 <unknown>\n#10 0x55cf1394eb28 <unknown>\n#11 0x55cf1395287f <unknown>\n#12 0x55cf13936c49 <unknown>\n#13 0x55cf13953405 <unknown>\n#14 0x55cf1391c4ff <unknown>\n#15 0x55cf13977258 <unknown>\n#16 0x55cf13977432 <unknown>\n#17 0x55cf13988fa3 <unknown>\n#18 0x7fecb229caa4 <unknown>\n#19 0x7fecb2329c6c <unknown>","statusTrace":"driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"2b5e5f1a603ffd77b5f0d617f9264e3d\")>\naddress_data = {'address_line_1': '12 MG Layout', 'address_line_2': 'Kadavanthra', 'city': 'Cochin', 'company_field': 'Wipro Technologies', ...}\nlogin_data = {'email': 'aarav.shasddasarma123@example.com', 'password': 'Pass@1234', 'result': 'success'}\n\n    @pytest.mark.parametrize(\"driver\", browsers, indirect=True)\n    @pytest.mark.parametrize(\"address_data\", get_data(\"data/Complete_Test_Data/add_address.csv\"))\n    @pytest.mark.parametrize(\"login_data\", get_data(\"data/Complete_Test_Data/login_data.csv\"))\n    @allure.feature(\"Add Address\")\n    def test_add_address(driver, address_data, login_data):\n        print(f\"\\nStarting test with login: {login_data['email']}\")\n        print(f\"Address data: {address_data}\")\n        driver.get(\"https://market99.com/\")\n        login_page = LoginPage(driver)\n>       login_page.open_login()\n\ntests/test_add_address.py:19: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npage_objects/login_page.py:32: in open_login\n    self.click(self.LOGIN_WITH_EMAIL_BUTTON)\npage_objects/base_page.py:55: in click\n    element = self.wait.until(EC.element_to_be_clickable(by_locator))\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"2b5e5f1a603ffd77b5f0d617f9264e3d\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7f1571ff8900>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x55cf13989fba <unknown>\nE       #1 0x55cf1340e6d0 <unknown>\nE       #2 0x55cf134602aa <unknown>\nE       #3 0x55cf13460541 <unknown>\nE       #4 0x55cf134ae6c4 <unknown>\nE       #5 0x55cf13485e5d <unknown>\nE       #6 0x55cf134abb54 <unknown>\nE       #7 0x55cf13485c03 <unknown>\nE       #8 0x55cf134527a8 <unknown>\nE       #9 0x55cf13453421 <unknown>\nE       #10 0x55cf1394eb28 <unknown>\nE       #11 0x55cf1395287f <unknown>\nE       #12 0x55cf13936c49 <unknown>\nE       #13 0x55cf13953405 <unknown>\nE       #14 0x55cf1391c4ff <unknown>\nE       #15 0x55cf13977258 <unknown>\nE       #16 0x55cf13977432 <unknown>\nE       #17 0x55cf13988fa3 <unknown>\nE       #18 0x7fecb229caa4 <unknown>\nE       #19 0x7fecb2329c6c <unknown>\n\n/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:138: TimeoutException","steps":[],"attachments":[{"uid":"28b67490627658f9","name":"screenshot","source":"28b67490627658f9.png","type":"image/png","size":56874}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1761123065663,"stop":1761123065730,"duration":67},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"feature","value":"Add Address"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_add_address"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2170-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_add_address"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"address_data","value":"{'first_name': 'Sneha', 'last_name': 'Nair', 'company_field': 'Wipro Technologies', 'province': 'Kerala', 'address_line_1': '12 MG Layout', 'address_line_2': 'Kadavanthra', 'city': 'Cochin', 'postal_code': '682020', 'phone_number': '9845123456'}"},{"name":"driver","value":"'chrome'"},{"name":"login_data","value":"{'email': 'aarav.shasddasarma123@example.com', 'password': 'Pass@1234', 'result': 'success'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"a5ee2e98e23d185b.json","parameterValues":["{'first_name': 'Sneha', 'last_name': 'Nair', 'company_field': 'Wipro Technologies', 'province': 'Kerala', 'address_line_1': '12 MG Layout', 'address_line_2': 'Kadavanthra', 'city': 'Cochin', 'postal_code': '682020', 'phone_number': '9845123456'}","'chrome'","{'email': 'aarav.shasddasarma123@example.com', 'password': 'Pass@1234', 'result': 'success'}"]}