{"uid":"cbe05191181fa536","name":"test_search_customer[search_data1-chrome]","fullName":"tests.test_search_product#test_search_customer","historyId":"3accdb7e2b5eb2f4374796612a95c234","time":{"start":1761073090208,"stop":1761073092365,"duration":2157},"status":"failed","statusMessage":"AssertionError: 'search' not found in URL: https://market99.com/\nassert 'search' in 'https://market99.com/'","statusTrace":"driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"545e20ea22aa5b5f2df8642ccf62e0e5\")>\nsearch_data = {'product': 'soap'}\n\n    @pytest.mark.parametrize(\"driver\", browsers, indirect=True)\n    @pytest.mark.parametrize(\"search_data\", get_data(\"data/Complete_Test_Data/search_data.xlsx\"))\n    @allure.feature(\"Search Page\")\n    def test_search_customer(driver, search_data):\n        driver.get(\"https://market99.com/\")\n        search_page = SearchPage(driver)\n    \n        product_name = search_data[\"product\"]\n    \n        search_page.open_search()\n        search_page.search_product(product_name)\n    \n        current_url = driver.current_url\n>       assert \"search\" in current_url, f\"'search' not found in URL: {current_url}\"\nE       AssertionError: 'search' not found in URL: https://market99.com/\nE       assert 'search' in 'https://market99.com/'\n\ntests/test_search_product.py:21: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"driver","time":{"start":1761073089802,"stop":1761073090207,"duration":405},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: 'search' not found in URL: https://market99.com/\nassert 'search' in 'https://market99.com/'","statusTrace":"driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"545e20ea22aa5b5f2df8642ccf62e0e5\")>\nsearch_data = {'product': 'soap'}\n\n    @pytest.mark.parametrize(\"driver\", browsers, indirect=True)\n    @pytest.mark.parametrize(\"search_data\", get_data(\"data/Complete_Test_Data/search_data.xlsx\"))\n    @allure.feature(\"Search Page\")\n    def test_search_customer(driver, search_data):\n        driver.get(\"https://market99.com/\")\n        search_page = SearchPage(driver)\n    \n        product_name = search_data[\"product\"]\n    \n        search_page.open_search()\n        search_page.search_product(product_name)\n    \n        current_url = driver.current_url\n>       assert \"search\" in current_url, f\"'search' not found in URL: {current_url}\"\nE       AssertionError: 'search' not found in URL: https://market99.com/\nE       assert 'search' in 'https://market99.com/'\n\ntests/test_search_product.py:21: AssertionError","steps":[],"attachments":[{"uid":"109b1b16dea12221","name":"screenshot","source":"109b1b16dea12221.png","type":"image/png","size":1181414}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1761073095206,"stop":1761073095286,"duration":80},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"feature","value":"Search Page"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_search_product"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2034-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_search_product"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"driver","value":"'chrome'"},{"name":"search_data","value":"{'product': 'soap'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"cbe05191181fa536.json","parameterValues":["'chrome'","{'product': 'soap'}"]}